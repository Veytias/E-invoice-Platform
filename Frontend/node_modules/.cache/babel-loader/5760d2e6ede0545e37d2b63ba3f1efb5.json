{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Popover from '../Popover';\nimport MenuList from '../MenuList';\nimport warning from 'warning';\nimport ReactDOM from 'react-dom';\nimport { setRef } from '../utils/reactHelpers';\nimport useTheme from '../styles/useTheme';\nvar RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nvar LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\nexport var styles = {\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    // specZ: The maximum height of a simple menu should be one or more rows less than the view\n    // height. This ensures a tapable area outside of the simple menu with which to dismiss\n    // the menu.\n    maxHeight: 'calc(100% - 96px)',\n    // Add iOS momentum scrolling.\n    WebkitOverflowScrolling: 'touch'\n  },\n\n  /* Styles applied to the `List` component via `MenuList`. */\n  list: {\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0\n  }\n};\nvar Menu = React.forwardRef(function Menu(props, ref) {\n  var autoFocusProp = props.autoFocus,\n      children = props.children,\n      classes = props.classes,\n      _props$disableAutoFoc = props.disableAutoFocusItem,\n      disableAutoFocusItem = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$MenuListProps = props.MenuListProps,\n      MenuListProps = _props$MenuListProps === void 0 ? {} : _props$MenuListProps,\n      onClose = props.onClose,\n      onEntering = props.onEntering,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      PopoverClasses = props.PopoverClasses,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"children\", \"classes\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"onEntering\", \"open\", \"PaperProps\", \"PopoverClasses\", \"transitionDuration\", \"variant\"]);\n\n  var theme = useTheme();\n  var autoFocus = (autoFocusProp !== undefined ? autoFocusProp : !disableAutoFocusItem) && open;\n  var menuListActionsRef = React.useRef(null);\n  var firstValidItemRef = React.useRef(null);\n  var firstSelectedItemRef = React.useRef(null);\n\n  var getContentAnchorEl = function getContentAnchorEl() {\n    return firstSelectedItemRef.current || firstValidItemRef.current;\n  };\n\n  var handleEntering = function handleEntering(element, isAppearing) {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\n    }\n\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n\n  var handleListKeyDown = function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n\n  var firstValidElementIndex = null;\n  var firstSelectedIndex = null;\n  var items = React.Children.map(children, function (child, index) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(child.type !== React.Fragment, [\"Material-UI: the Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n')) : void 0;\n\n    if (firstValidElementIndex === null) {\n      firstValidElementIndex = index;\n    }\n\n    var newChildProps = null;\n\n    if (variant !== \"menu\" && firstSelectedIndex === null && child.props.selected && !child.props.disabled) {\n      firstSelectedIndex = index;\n      newChildProps = {};\n\n      if (autoFocus) {\n        newChildProps.autoFocus = true;\n      }\n\n      if (child.props.tabIndex === undefined) {\n        newChildProps.tabIndex = 0;\n      }\n\n      newChildProps.ref = function (instance) {\n        // #StrictMode ready\n        firstSelectedItemRef.current = ReactDOM.findDOMNode(instance);\n        setRef(child.ref, instance);\n      };\n    } else if (index === firstValidElementIndex) {\n      newChildProps = {\n        ref: function ref(instance) {\n          // #StrictMode ready\n          firstValidItemRef.current = ReactDOM.findDOMNode(instance);\n          setRef(child.ref, instance);\n        }\n      };\n    }\n\n    if (newChildProps !== null) {\n      return React.cloneElement(child, newChildProps);\n    }\n\n    return child;\n  });\n  return React.createElement(Popover, _extends({\n    getContentAnchorEl: getContentAnchorEl,\n    classes: PopoverClasses,\n    onClose: onClose,\n    onEntering: handleEntering,\n    anchorOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\n    transformOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\n    PaperProps: _extends({}, PaperProps, {\n      classes: _extends({}, PaperProps.classes, {\n        root: classes.paper\n      })\n    }),\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration\n  }, other), React.createElement(MenuList, _extends({\n    onKeyDown: handleListKeyDown,\n    actions: menuListActionsRef,\n    autoFocus: autoFocus && firstSelectedIndex === null\n  }, MenuListProps, {\n    className: clsx(classes.list, MenuListProps.className)\n  }), items));\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes = {\n  /**\n   * The DOM element used to set the position of the menu.\n   */\n  anchorEl: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n\n  /**\n   * If `true` (default), the menu list (possibly a particular item depending on the menu variant) will receive focus on open.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Menu contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * Same as `autoFocus=false`.\n   * @deprecated Use `autoFocus` instead.\n   */\n  disableAutoFocusItem: PropTypes.bool,\n\n  /**\n   * Props applied to the [`MenuList`](/api/menu-list/) element.\n   */\n  MenuListProps: PropTypes.object,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be:`\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the Menu enters.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the Menu has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the Menu is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired before the Menu exits.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the Menu has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the Menu is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * If `true`, the menu is visible.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * `classes` prop applied to the [`Popover`](/api/popover/) element.\n   */\n  PopoverClasses: PropTypes.object,\n\n  /**\n   * The length of the transition in `ms`, or 'auto'\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  }), PropTypes.oneOf(['auto'])]),\n\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\n   * and the vertical alignment relative to the anchor element.\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenu'\n})(Menu);","map":{"version":3,"sources":["C:/Users/barry/Desktop/SENG2021/h18abrowniefrontend/node_modules/@material-ui/core/esm/Menu/Menu.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","Popover","MenuList","warning","ReactDOM","setRef","useTheme","RTL_ORIGIN","vertical","horizontal","LTR_ORIGIN","styles","paper","maxHeight","WebkitOverflowScrolling","list","outline","Menu","forwardRef","props","ref","autoFocusProp","autoFocus","children","classes","_props$disableAutoFoc","disableAutoFocusItem","_props$MenuListProps","MenuListProps","onClose","onEntering","open","_props$PaperProps","PaperProps","PopoverClasses","_props$transitionDura","transitionDuration","_props$variant","variant","other","theme","undefined","menuListActionsRef","useRef","firstValidItemRef","firstSelectedItemRef","getContentAnchorEl","current","handleEntering","element","isAppearing","adjustStyleForScrollbar","handleListKeyDown","event","key","preventDefault","firstValidElementIndex","firstSelectedIndex","items","Children","map","child","index","isValidElement","process","env","NODE_ENV","type","Fragment","join","newChildProps","selected","disabled","tabIndex","instance","findDOMNode","cloneElement","createElement","anchorOrigin","direction","transformOrigin","root","onKeyDown","actions","className","propTypes","anchorEl","oneOfType","object","func","bool","node","isRequired","onEnter","onEntered","onExit","onExited","onExiting","number","shape","enter","exit","oneOf","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Popover from '../Popover';\nimport MenuList from '../MenuList';\nimport warning from 'warning';\nimport ReactDOM from 'react-dom';\nimport { setRef } from '../utils/reactHelpers';\nimport useTheme from '../styles/useTheme';\nvar RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nvar LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\nexport var styles = {\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    // specZ: The maximum height of a simple menu should be one or more rows less than the view\n    // height. This ensures a tapable area outside of the simple menu with which to dismiss\n    // the menu.\n    maxHeight: 'calc(100% - 96px)',\n    // Add iOS momentum scrolling.\n    WebkitOverflowScrolling: 'touch'\n  },\n\n  /* Styles applied to the `List` component via `MenuList`. */\n  list: {\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0\n  }\n};\nvar Menu = React.forwardRef(function Menu(props, ref) {\n  var autoFocusProp = props.autoFocus,\n      children = props.children,\n      classes = props.classes,\n      _props$disableAutoFoc = props.disableAutoFocusItem,\n      disableAutoFocusItem = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$MenuListProps = props.MenuListProps,\n      MenuListProps = _props$MenuListProps === void 0 ? {} : _props$MenuListProps,\n      onClose = props.onClose,\n      onEntering = props.onEntering,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      PopoverClasses = props.PopoverClasses,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"children\", \"classes\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"onEntering\", \"open\", \"PaperProps\", \"PopoverClasses\", \"transitionDuration\", \"variant\"]);\n\n  var theme = useTheme();\n  var autoFocus = (autoFocusProp !== undefined ? autoFocusProp : !disableAutoFocusItem) && open;\n  var menuListActionsRef = React.useRef(null);\n  var firstValidItemRef = React.useRef(null);\n  var firstSelectedItemRef = React.useRef(null);\n\n  var getContentAnchorEl = function getContentAnchorEl() {\n    return firstSelectedItemRef.current || firstValidItemRef.current;\n  };\n\n  var handleEntering = function handleEntering(element, isAppearing) {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\n    }\n\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n\n  var handleListKeyDown = function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n\n  var firstValidElementIndex = null;\n  var firstSelectedIndex = null;\n  var items = React.Children.map(children, function (child, index) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(child.type !== React.Fragment, [\"Material-UI: the Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n')) : void 0;\n\n    if (firstValidElementIndex === null) {\n      firstValidElementIndex = index;\n    }\n\n    var newChildProps = null;\n\n    if (variant !== \"menu\" && firstSelectedIndex === null && child.props.selected && !child.props.disabled) {\n      firstSelectedIndex = index;\n      newChildProps = {};\n\n      if (autoFocus) {\n        newChildProps.autoFocus = true;\n      }\n\n      if (child.props.tabIndex === undefined) {\n        newChildProps.tabIndex = 0;\n      }\n\n      newChildProps.ref = function (instance) {\n        // #StrictMode ready\n        firstSelectedItemRef.current = ReactDOM.findDOMNode(instance);\n        setRef(child.ref, instance);\n      };\n    } else if (index === firstValidElementIndex) {\n      newChildProps = {\n        ref: function ref(instance) {\n          // #StrictMode ready\n          firstValidItemRef.current = ReactDOM.findDOMNode(instance);\n          setRef(child.ref, instance);\n        }\n      };\n    }\n\n    if (newChildProps !== null) {\n      return React.cloneElement(child, newChildProps);\n    }\n\n    return child;\n  });\n  return React.createElement(Popover, _extends({\n    getContentAnchorEl: getContentAnchorEl,\n    classes: PopoverClasses,\n    onClose: onClose,\n    onEntering: handleEntering,\n    anchorOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\n    transformOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\n    PaperProps: _extends({}, PaperProps, {\n      classes: _extends({}, PaperProps.classes, {\n        root: classes.paper\n      })\n    }),\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration\n  }, other), React.createElement(MenuList, _extends({\n    onKeyDown: handleListKeyDown,\n    actions: menuListActionsRef,\n    autoFocus: autoFocus && firstSelectedIndex === null\n  }, MenuListProps, {\n    className: clsx(classes.list, MenuListProps.className)\n  }), items));\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes = {\n  /**\n   * The DOM element used to set the position of the menu.\n   */\n  anchorEl: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n\n  /**\n   * If `true` (default), the menu list (possibly a particular item depending on the menu variant) will receive focus on open.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Menu contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * Same as `autoFocus=false`.\n   * @deprecated Use `autoFocus` instead.\n   */\n  disableAutoFocusItem: PropTypes.bool,\n\n  /**\n   * Props applied to the [`MenuList`](/api/menu-list/) element.\n   */\n  MenuListProps: PropTypes.object,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be:`\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the Menu enters.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the Menu has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the Menu is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired before the Menu exits.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the Menu has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the Menu is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * If `true`, the menu is visible.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * `classes` prop applied to the [`Popover`](/api/popover/) element.\n   */\n  PopoverClasses: PropTypes.object,\n\n  /**\n   * The length of the transition in `ms`, or 'auto'\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  }), PropTypes.oneOf(['auto'])]),\n\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\n   * and the vertical alignment relative to the anchor element.\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenu'\n})(Menu);"]},"metadata":{},"sourceType":"module"}